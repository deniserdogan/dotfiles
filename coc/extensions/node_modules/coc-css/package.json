{
  "name": "coc-css",
  "version": "1.2.6",
  "description": "Css extension for coc",
  "main": "lib/index.js",
  "publisher": "chemzqm",
  "engines": {
    "coc": "^0.0.78"
  },
  "keywords": [
    "coc.nvim",
    "languageserver"
  ],
  "scripts": {
    "clean": "rimraf lib",
    "build": "webpack",
    "prepare": "npx npm-run-all clean build"
  },
  "activationEvents": [
    "onLanguage:css",
    "onLanguage:less",
    "onLanguage:scss",
    "onLanguage:wxss"
  ],
  "contributes": {
    "configuration": {
      "type": "object",
      "title": "Css",
      "properties": {
        "css.enable": {
          "type": "boolean",
          "default": true
        },
        "css.trace.server": {
          "type": "string",
          "default": "off",
          "enum": [
            "off",
            "messages",
            "verbose"
          ]
        },
        "css.customData": {
          "type": "array",
          "markdownDescription": "A list of relative file paths pointing to JSON files following the [custom data format](https://github.com/Microsoft/vscode-css-languageservice/blob/master/docs/customData.md).\n\ncoc.nvim loads custom data on startup to enhance its CSS support for the custom CSS properties, at directives, pseudo classes and pseudo elements you specify in the JSON files.\n\nThe file paths are relative to workspace and only workspace folder settings are considered.",
          "default": [],
          "items": {
            "type": "string"
          },
          "scope": "resource"
        },
        "css.completion.triggerPropertyValueCompletion": {
          "type": "boolean",
          "scope": "resource",
          "default": true,
          "description": "By default, coc.nvim triggers property value completion after selecting a CSS property. Use this setting to disable this behavior."
        },
        "css.completion.completePropertyWithSemicolon": {
          "type": "boolean",
          "scope": "resource",
          "default": true,
          "description": "Insert semicolon at end of line when completing CSS properties"
        },
        "css.validate": {
          "type": "boolean",
          "scope": "resource",
          "default": true
        },
        "css.colorDecorators.enable": {
          "type": "boolean",
          "scope": "window",
          "default": true
        },
        "css.lint.compatibleVendorPrefixes": {
          "type": "string",
          "scope": "resource",
          "enum": [
            "ignore",
            "warning",
            "error"
          ],
          "default": "ignore",
          "description": "When using a vendor-specific prefix make sure to also include all other vendor-specific properties"
        },
        "css.lint.vendorPrefix": {
          "type": "string",
          "scope": "resource",
          "enum": [
            "ignore",
            "warning",
            "error"
          ],
          "default": "warning",
          "description": "When using a vendor-specific prefix also include the standard property"
        },
        "css.lint.duplicateProperties": {
          "type": "string",
          "scope": "resource",
          "enum": [
            "ignore",
            "warning",
            "error"
          ],
          "default": "ignore",
          "description": "Do not use duplicate style definitions"
        },
        "css.lint.emptyRules": {
          "type": "string",
          "scope": "resource",
          "enum": [
            "ignore",
            "warning",
            "error"
          ],
          "default": "warning",
          "description": "Do not use empty rulesets"
        },
        "css.lint.importStatement": {
          "type": "string",
          "scope": "resource",
          "enum": [
            "ignore",
            "warning",
            "error"
          ],
          "default": "ignore",
          "description": "Avoid using !important. It is an indication that the specificity of the entire CSS has gotten out of control and needs to be refactored."
        },
        "css.lint.boxModel": {
          "type": "string",
          "scope": "resource",
          "enum": [
            "ignore",
            "warning",
            "error"
          ],
          "default": "ignore"
        },
        "css.lint.universalSelector": {
          "type": "string",
          "scope": "resource",
          "enum": [
            "ignore",
            "warning",
            "error"
          ],
          "default": "ignore",
          "description": "The universal selector (*) is known to be slow"
        },
        "css.lint.zeroUnits": {
          "type": "string",
          "scope": "resource",
          "enum": [
            "ignore",
            "warning",
            "error"
          ],
          "default": "ignore"
        },
        "css.lint.fontFaceProperties": {
          "type": "string",
          "scope": "resource",
          "enum": [
            "ignore",
            "warning",
            "error"
          ],
          "default": "warning",
          "description": "@font-face rule must define 'src' and 'font-family' properties"
        },
        "css.lint.hexColorLength": {
          "type": "string",
          "scope": "resource",
          "enum": [
            "ignore",
            "warning",
            "error"
          ],
          "default": "error",
          "description": "Hex colors must consist of three or six hex numbers"
        },
        "css.lint.argumentsInColorFunction": {
          "type": "string",
          "scope": "resource",
          "enum": [
            "ignore",
            "warning",
            "error"
          ],
          "default": "error",
          "description": "Invalid number of parameters"
        },
        "css.lint.unknownProperties": {
          "type": "string",
          "scope": "resource",
          "enum": [
            "ignore",
            "warning",
            "error"
          ],
          "default": "warning",
          "description": "Unknown property."
        },
        "css.lint.ieHack": {
          "type": "string",
          "scope": "resource",
          "enum": [
            "ignore",
            "warning",
            "error"
          ],
          "default": "ignore"
        },
        "css.lint.unknownVendorSpecificProperties": {
          "type": "string",
          "scope": "resource",
          "enum": [
            "ignore",
            "warning",
            "error"
          ],
          "default": "ignore",
          "description": "Unknown vendor specific property."
        },
        "css.lint.propertyIgnoredDueToDisplay": {
          "type": "string",
          "scope": "resource",
          "enum": [
            "ignore",
            "warning",
            "error"
          ],
          "default": "warning",
          "description": "Property is ignored due to the display. E.g. with 'display: inline', the width, height, margin-top, margin-bottom, and float properties have no effect"
        },
        "css.lint.important": {
          "type": "string",
          "scope": "resource",
          "enum": [
            "ignore",
            "warning",
            "error"
          ],
          "default": "ignore",
          "description": "Import statements do not load in parallel"
        },
        "css.lint.float": {
          "type": "string",
          "scope": "resource",
          "enum": [
            "ignore",
            "warning",
            "error"
          ],
          "default": "ignore",
          "description": "Avoid using 'float'. Floats lead to fragile CSS that is easy to break if one aspect of the layout changes."
        },
        "css.lint.idSelector": {
          "type": "string",
          "scope": "resource",
          "enum": [
            "ignore",
            "warning",
            "error"
          ],
          "default": "ignore",
          "description": "Selectors should not contain IDs because these rules are too tightly coupled with the HTML."
        },
        "css.lint.unknownAtRules": {
          "type": "string",
          "scope": "resource",
          "enum": [
            "ignore",
            "warning",
            "error"
          ],
          "default": "warning",
          "description": "Unknown at-rule."
        },
        "less.completion.triggerPropertyValueCompletion": {
          "type": "boolean",
          "scope": "resource",
          "default": true,
          "description": "By default, coc.nvim triggers property value completion after selecting a CSS property. Use this setting to disable this behavior."
        },
        "less.completion.completePropertyWithSemicolon": {
          "type": "boolean",
          "scope": "resource",
          "default": true,
          "description": "Insert semicolon at end of line when completing CSS properties"
        },
        "less.validate": {
          "type": "boolean",
          "scope": "resource",
          "default": true
        },
        "less.colorDecorators.enable": {
          "type": "boolean",
          "scope": "window",
          "default": true
        },
        "less.lint.compatibleVendorPrefixes": {
          "type": "string",
          "scope": "resource",
          "enum": [
            "ignore",
            "warning",
            "error"
          ],
          "default": "ignore",
          "description": "When using a vendor-specific prefix make sure to also include all other vendor-specific properties"
        },
        "less.lint.vendorPrefix": {
          "type": "string",
          "scope": "resource",
          "enum": [
            "ignore",
            "warning",
            "error"
          ],
          "default": "warning",
          "description": "When using a vendor-specific prefix also include the standard property"
        },
        "less.lint.duplicateProperties": {
          "type": "string",
          "scope": "resource",
          "enum": [
            "ignore",
            "warning",
            "error"
          ],
          "default": "ignore",
          "description": "Do not use duplicate style definitions"
        },
        "less.lint.emptyRules": {
          "type": "string",
          "scope": "resource",
          "enum": [
            "ignore",
            "warning",
            "error"
          ],
          "default": "warning",
          "description": "Do not use empty rulesets"
        },
        "less.lint.importStatement": {
          "type": "string",
          "scope": "resource",
          "enum": [
            "ignore",
            "warning",
            "error"
          ],
          "default": "ignore",
          "description": "Avoid using !important. It is an indication that the specificity of the entire CSS has gotten out of control and needs to be refactored."
        },
        "less.lint.boxModel": {
          "type": "string",
          "scope": "resource",
          "enum": [
            "ignore",
            "warning",
            "error"
          ],
          "default": "ignore"
        },
        "less.lint.universalSelector": {
          "type": "string",
          "scope": "resource",
          "enum": [
            "ignore",
            "warning",
            "error"
          ],
          "default": "ignore",
          "description": "The universal selector (*) is known to be slow"
        },
        "less.lint.zeroUnits": {
          "type": "string",
          "scope": "resource",
          "enum": [
            "ignore",
            "warning",
            "error"
          ],
          "default": "ignore"
        },
        "less.lint.fontFaceProperties": {
          "type": "string",
          "scope": "resource",
          "enum": [
            "ignore",
            "warning",
            "error"
          ],
          "default": "warning",
          "description": "@font-face rule must define 'src' and 'font-family' properties"
        },
        "less.lint.hexColorLength": {
          "type": "string",
          "scope": "resource",
          "enum": [
            "ignore",
            "warning",
            "error"
          ],
          "default": "error",
          "description": "Hex colors must consist of three or six hex numbers"
        },
        "less.lint.argumentsInColorFunction": {
          "type": "string",
          "scope": "resource",
          "enum": [
            "ignore",
            "warning",
            "error"
          ],
          "default": "error",
          "description": "Invalid number of parameters"
        },
        "less.lint.unknownProperties": {
          "type": "string",
          "scope": "resource",
          "enum": [
            "ignore",
            "warning",
            "error"
          ],
          "default": "warning",
          "description": "Unknown property."
        },
        "less.lint.ieHack": {
          "type": "string",
          "scope": "resource",
          "enum": [
            "ignore",
            "warning",
            "error"
          ],
          "default": "ignore"
        },
        "less.lint.unknownVendorSpecificProperties": {
          "type": "string",
          "scope": "resource",
          "enum": [
            "ignore",
            "warning",
            "error"
          ],
          "default": "ignore",
          "description": "Unknown vendor specific property."
        },
        "less.lint.propertyIgnoredDueToDisplay": {
          "type": "string",
          "scope": "resource",
          "enum": [
            "ignore",
            "warning",
            "error"
          ],
          "default": "warning",
          "description": "Property is ignored due to the display. E.g. with 'display: inline', the width, height, margin-top, margin-bottom, and float properties have no effect"
        },
        "less.lint.important": {
          "type": "string",
          "scope": "resource",
          "enum": [
            "ignore",
            "warning",
            "error"
          ],
          "default": "ignore",
          "description": "Import statements do not load in parallel"
        },
        "less.lint.float": {
          "type": "string",
          "scope": "resource",
          "enum": [
            "ignore",
            "warning",
            "error"
          ],
          "default": "ignore",
          "description": "Avoid using 'float'. Floats lead to fragile CSS that is easy to break if one aspect of the layout changes."
        },
        "less.lint.idSelector": {
          "type": "string",
          "scope": "resource",
          "enum": [
            "ignore",
            "warning",
            "error"
          ],
          "default": "ignore",
          "description": "Selectors should not contain IDs because these rules are too tightly coupled with the HTML."
        },
        "less.lint.unknownAtRules": {
          "type": "string",
          "scope": "resource",
          "enum": [
            "ignore",
            "warning",
            "error"
          ],
          "default": "warning",
          "description": "Unknown at-rule."
        },
        "scss.completion.triggerPropertyValueCompletion": {
          "type": "boolean",
          "scope": "resource",
          "default": true,
          "description": "By default, coc.nvim triggers property value completion after selecting a CSS property. Use this setting to disable this behavior."
        },
        "scss.completion.completePropertyWithSemicolon": {
          "type": "boolean",
          "scope": "resource",
          "default": true,
          "description": "Insert semicolon at end of line when completing CSS properties"
        },
        "scss.validate": {
          "type": "boolean",
          "scope": "resource",
          "default": true
        },
        "scss.colorDecorators.enable": {
          "type": "boolean",
          "scope": "window",
          "default": true
        },
        "scss.lint.compatibleVendorPrefixes": {
          "type": "string",
          "scope": "resource",
          "enum": [
            "ignore",
            "warning",
            "error"
          ],
          "default": "ignore"
        },
        "scss.lint.vendorPrefix": {
          "type": "string",
          "scope": "resource",
          "enum": [
            "ignore",
            "warning",
            "error"
          ],
          "default": "warning"
        },
        "scss.lint.duplicateProperties": {
          "type": "string",
          "scope": "resource",
          "enum": [
            "ignore",
            "warning",
            "error"
          ],
          "default": "ignore"
        },
        "scss.lint.emptyRules": {
          "type": "string",
          "scope": "resource",
          "enum": [
            "ignore",
            "warning",
            "error"
          ],
          "default": "warning"
        },
        "scss.lint.importStatement": {
          "type": "string",
          "scope": "resource",
          "enum": [
            "ignore",
            "warning",
            "error"
          ],
          "default": "ignore"
        },
        "scss.lint.boxModel": {
          "type": "string",
          "scope": "resource",
          "enum": [
            "ignore",
            "warning",
            "error"
          ],
          "default": "ignore",
          "description": "Do not use width or height when using padding or border"
        },
        "scss.lint.universalSelector": {
          "type": "string",
          "scope": "resource",
          "enum": [
            "ignore",
            "warning",
            "error"
          ],
          "default": "ignore"
        },
        "scss.lint.zeroUnits": {
          "type": "string",
          "scope": "resource",
          "enum": [
            "ignore",
            "warning",
            "error"
          ],
          "default": "ignore"
        },
        "scss.lint.fontFaceProperties": {
          "type": "string",
          "scope": "resource",
          "enum": [
            "ignore",
            "warning",
            "error"
          ],
          "default": "warning"
        },
        "scss.lint.hexColorLength": {
          "type": "string",
          "scope": "resource",
          "enum": [
            "ignore",
            "warning",
            "error"
          ],
          "default": "error"
        },
        "scss.lint.argumentsInColorFunction": {
          "type": "string",
          "scope": "resource",
          "enum": [
            "ignore",
            "warning",
            "error"
          ],
          "default": "error"
        },
        "scss.lint.unknownProperties": {
          "type": "string",
          "scope": "resource",
          "enum": [
            "ignore",
            "warning",
            "error"
          ],
          "default": "warning"
        },
        "scss.lint.ieHack": {
          "type": "string",
          "scope": "resource",
          "enum": [
            "ignore",
            "warning",
            "error"
          ],
          "default": "ignore",
          "description": "IE hacks are only necessary when supporting IE7 and older"
        },
        "scss.lint.unknownVendorSpecificProperties": {
          "type": "string",
          "scope": "resource",
          "enum": [
            "ignore",
            "warning",
            "error"
          ],
          "default": "ignore"
        },
        "scss.lint.propertyIgnoredDueToDisplay": {
          "type": "string",
          "scope": "resource",
          "enum": [
            "ignore",
            "warning",
            "error"
          ],
          "default": "warning"
        },
        "scss.lint.important": {
          "type": "string",
          "scope": "resource",
          "enum": [
            "ignore",
            "warning",
            "error"
          ],
          "default": "ignore"
        },
        "scss.lint.float": {
          "type": "string",
          "scope": "resource",
          "enum": [
            "ignore",
            "warning",
            "error"
          ],
          "default": "ignore"
        },
        "scss.lint.idSelector": {
          "type": "string",
          "scope": "resource",
          "enum": [
            "ignore",
            "warning",
            "error"
          ],
          "default": "ignore"
        },
        "wxss.validate": {
          "type": "boolean",
          "scope": "resource",
          "default": true
        },
        "wxss.colorDecorators.enable": {
          "type": "boolean",
          "scope": "window",
          "default": true
        },
        "wxss.lint.compatibleVendorPrefixes": {
          "type": "string",
          "scope": "resource",
          "enum": [
            "ignore",
            "warning",
            "error"
          ],
          "default": "ignore"
        },
        "wxss.lint.vendorPrefix": {
          "type": "string",
          "scope": "resource",
          "enum": [
            "ignore",
            "warning",
            "error"
          ],
          "default": "warning"
        },
        "wxss.lint.duplicateProperties": {
          "type": "string",
          "scope": "resource",
          "enum": [
            "ignore",
            "warning",
            "error"
          ],
          "default": "ignore"
        },
        "wxss.lint.emptyRules": {
          "type": "string",
          "scope": "resource",
          "enum": [
            "ignore",
            "warning",
            "error"
          ],
          "default": "warning"
        },
        "wxss.lint.importStatement": {
          "type": "string",
          "scope": "resource",
          "enum": [
            "ignore",
            "warning",
            "error"
          ],
          "default": "ignore"
        },
        "wxss.lint.boxModel": {
          "type": "string",
          "scope": "resource",
          "enum": [
            "ignore",
            "warning",
            "error"
          ],
          "default": "ignore"
        },
        "wxss.lint.universalSelector": {
          "type": "string",
          "scope": "resource",
          "enum": [
            "ignore",
            "warning",
            "error"
          ],
          "default": "ignore"
        },
        "wxss.lint.zeroUnits": {
          "type": "string",
          "scope": "resource",
          "enum": [
            "ignore",
            "warning",
            "error"
          ],
          "default": "ignore"
        },
        "wxss.lint.fontFaceProperties": {
          "type": "string",
          "scope": "resource",
          "enum": [
            "ignore",
            "warning",
            "error"
          ],
          "default": "warning"
        },
        "wxss.lint.hexColorLength": {
          "type": "string",
          "scope": "resource",
          "enum": [
            "ignore",
            "warning",
            "error"
          ],
          "default": "error"
        },
        "wxss.lint.argumentsInColorFunction": {
          "type": "string",
          "scope": "resource",
          "enum": [
            "ignore",
            "warning",
            "error"
          ],
          "default": "error"
        },
        "wxss.lint.unknownProperties": {
          "type": "string",
          "scope": "resource",
          "enum": [
            "ignore",
            "warning",
            "error"
          ],
          "default": "warning"
        },
        "wxss.lint.ieHack": {
          "type": "string",
          "scope": "resource",
          "enum": [
            "ignore",
            "warning",
            "error"
          ],
          "default": "ignore"
        },
        "wxss.lint.unknownVendorSpecificProperties": {
          "type": "string",
          "scope": "resource",
          "enum": [
            "ignore",
            "warning",
            "error"
          ],
          "default": "ignore"
        },
        "wxss.lint.propertyIgnoredDueToDisplay": {
          "type": "string",
          "scope": "resource",
          "enum": [
            "ignore",
            "warning",
            "error"
          ],
          "default": "warning"
        },
        "wxss.lint.important": {
          "type": "string",
          "scope": "resource",
          "enum": [
            "ignore",
            "warning",
            "error"
          ],
          "default": "ignore"
        },
        "wxss.lint.float": {
          "type": "string",
          "scope": "resource",
          "enum": [
            "ignore",
            "warning",
            "error"
          ],
          "default": "ignore"
        },
        "wxss.lint.idSelector": {
          "type": "string",
          "scope": "resource",
          "enum": [
            "ignore",
            "warning",
            "error"
          ],
          "default": "ignore"
        }
      }
    }
  },
  "author": "chemzqm@gmail.com",
  "license": "MIT",
  "devDependencies": {
    "@types/node": "^14.14.5",
    "coc.nvim": "^0.0.79",
    "rimraf": "^3.0.2",
    "ts-loader": "^8.0.7",
    "typescript": "^4.0.5",
    "vscode-css-languageservice": "4.3.5",
    "vscode-languageserver": "7.0.0-next.3",
    "vscode-languageserver-protocol": "^3.15.3",
    "vscode-uri": "^2.1.2",
    "webpack": "^5.2.0",
    "webpack-cli": "^4.1.0"
  },
  "dependencies": {}
}
